-- --------------------------------------------------------
-- 主机:                           192.168.9.200
-- 服务器版本:                        5.7.26 - MySQL Community Server (GPL)
-- 服务器操作系统:                      Win64
-- HeidiSQL 版本:                  12.4.0.6659
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


-- 导出 yy-config 的数据库结构
CREATE DATABASE IF NOT EXISTS `yy-config` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci */;
USE `yy-config`;

-- 导出  表 yy-config.config_info 结构
CREATE TABLE IF NOT EXISTS `config_info` (
  `id` bigint(20) DEFAULT NULL,
  `data_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `group_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` longtext COLLATE utf8mb4_unicode_ci,
  `md5` varchar(32) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `gmt_create` datetime DEFAULT NULL,
  `gmt_modified` datetime DEFAULT NULL,
  `src_user` text COLLATE utf8mb4_unicode_ci,
  `src_ip` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `app_name` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `c_desc` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `c_use` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `effect` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `type` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `c_schema` text COLLATE utf8mb4_unicode_ci,
  `encrypted_data_key` text COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.config_info 的数据：~29 rows (大约)
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES
	(1, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  autoconfigure:\r\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n\r\n# feign 配置\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n  okhttp:\r\n    enabled: true\r\n  httpclient:\r\n    enabled: false\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 50000\r\n        readTimeout: 50000\r\n  compression:\r\n    request:\r\n      enabled: true \r\n      # 配置压缩数据大小的下限\r\n      min-request-size: 501200\r\n    response:\r\n      enabled: true', 'aaa73b809cfd4d0058893aa13da57806', '2020-05-20 12:00:00', '2022-04-24 10:26:34', 'nacos', '0:0:0:0:0:0:0:1', '', '', '通用配置', 'null', 'null', 'yaml', NULL, ''),
	(2, 'yydj-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: yydj-auth\n          uri: lb://yydj-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 安卓app接口认证中心\n        - id: yydj-autha\n          uri: lb://yydj-autha\n          predicates:\n            - Path=/autha/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateSmsCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: yydj-gen\n          uri: lb://yydj-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: yydj-job\n          uri: lb://yydj-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: yydj-system\n          uri: lb://yydj-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: yydj-file\n          uri: lb://yydj-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # app系统模块\n        - id: yydj-asystem\n          uri: lb://yydj-asystem\n          predicates:\n            - Path=/asystem/**\n          filters:\n            - StripPrefix=1\n        # 客户模块\n        - id: yydj-client\n          uri: lb://yydj-client\n          predicates:\n            - Path=/client/**\n          filters:\n            - StripPrefix=1\n        # 视频内容模块\n        - id: yydj-content\n          uri: lb://yydj-content\n          predicates:\n            - Path=/content/**\n          filters:\n            - StripPrefix=1\n        # 设备模块模块\n        - id: yydj-device\n          uri: lb://yydj-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # app日志模块\n        - id: yydj-log\n          uri: lb://yydj-log\n          predicates:\n            - Path=/log/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /autha/logout\n      - /autha/login\n      - /autha/register\n      - /*/v2/api-docs\n      - /csrf\n      - /device/noticeReback/location\n      - /device/noticeReback/warning\n      - /device/noticeReback/health\n      - /device/noticeReback/beatHeart\n      - /device/noticeReback/audio\n      - /device/noticeReback/ecg\n      - /device/noticeReback/bluetooth\n      - /device/noticeReback/confirm\n      - /device/noticeReback/revh\n      - /autha/oauth/render/*\n      - /autha/oauth/callback/*\n      - /autha/circle/listByClassId/**\n      - /autha/video/info\n      - /autha/video/class/list\n      - /autha/index/bgm\n      - /autha/client/info/**\n      - /autha/video/list/user/**\n      - /auth/news/newsGetByKeyWord/**\n      - /autha/uploadVideo\nsms:\n  endpoint: dysmsapi.aliyuncs.com\n  accessKeyId: LTAI5tPxSF655ssJbYSP8wPg\n  accessKeySecret: 34tONZLx541C508p2TNpeUwaPIEeDK\n  signName: 羊羊当家\n  templateCode: SMS_224356316\n\n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-gateway/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', 'b8cbe7c6cd24c6c21dddb799b7b57ff7', '2020-05-14 14:17:55', '2022-06-24 08:34:50', 'nacos', '0:0:0:0:0:0:0:1', '', '', '网关模块', 'null', 'null', 'yaml', '', ''),
	(3, 'yydj-auth-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-auth/error.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'', 'b7354e1eb62c2d846d44a796d9ec6930', '2020-11-20 00:00:00', '2021-02-28 21:06:58', 'nacos', '0:0:0:0:0:0:0:1', '', '', '认证中心', 'null', 'null', 'yaml', NULL, ''),
	(4, 'yydj-monitor-dev.yml', 'DEFAULT_GROUP', '# spring\r\nspring:\r\n  security:\r\n    user:\r\n      name: yydj\r\n      password: 123456\r\n  mail:\r\n    host: smtp.qq.com # 发件人使用的qq邮箱服务\r\n    username: 724555787@qq.com\r\n    # 授权码，不是密码，在qq邮箱设置‐账号里面有生成授权码\r\n    password: dceifojhwufgbcjg\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 羊羊当家服务状态监控\r\n      notify:\r\n        mail:\r\n          # 发件人\r\n          from: 724555787@qq.com\r\n          # 收件人，多个中间用,分隔\r\n          to: 1329800796@qq.com\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-visual-monitor/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n', 'd8997d0707a2fd5d9fc4e8409da38129', '2020-11-20 00:00:00', '2020-12-21 16:28:07', 'nacos', '0:0:0:0:0:0:0:1', '', '', '监控中心', 'null', 'null', 'yaml', NULL, ''),
	(5, 'yydj-system-dev.yml', 'DEFAULT_GROUP', '# spring配置\r\nspring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n  datasource:\r\n    druid:\r\n      stat-view-servlet:\r\n        enabled: true\r\n        loginUsername: admin\r\n        loginPassword: 123456\r\n    dynamic:\r\n      druid:\r\n        initial-size: 5\r\n        min-idle: 5\r\n        maxActive: 20\r\n        maxWait: 60000\r\n        timeBetweenEvictionRunsMillis: 60000\r\n        minEvictableIdleTimeMillis: 300000\r\n        validationQuery: SELECT 1 FROM DUAL\r\n        testWhileIdle: true\r\n        testOnBorrow: false\r\n        testOnReturn: false\r\n        poolPreparedStatements: true\r\n        maxPoolPreparedStatementPerConnectionSize: 20\r\n        filters: stat,slf4j\r\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\r\n      datasource:\r\n          # 主库数据源\r\n          master:\r\n            driver-class-name: com.mysql.cj.jdbc.Driver\r\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n            username: yydj\r\n            password: n7c6qcPRc7SeZXxM\r\n          # 从库数据源\r\n          # slave:\r\n            # username:\r\n            # password:\r\n            # url:\r\n            # driver-class-name:\r\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\r\n\r\n# seata配置\r\nseata:\r\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\r\n  enabled: false\r\n  # Seata 应用编号，默认为 ${spring.application.name}\r\n  application-id: ${spring.application.name}\r\n  # Seata 事务组编号，用于 TC 集群名\r\n  tx-service-group: ${spring.application.name}-group\r\n  # 关闭自动代理\r\n  enable-auto-data-source-proxy: false\r\n  # 服务配置项\r\n  service:\r\n    # 虚拟组和分组的映射\r\n    vgroup-mapping:\r\n      yydj-system-group: default\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      serverAddr: nacos2:8848\r\n      group: SEATA_GROUP\r\n      namespace:\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      application: seata-server\r\n      server-addr: nacos2:8848\r\n      namespace:\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.hztx.system.domain,com.hztx.system.api.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 系统模块接口文档\r\n  license: Powered By yydj\r\n  licenseUrl: https://yydj.vip\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-system/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'', 'c7e55ca5134a4dc6064588f4523aedad', '2020-11-20 00:00:00', '2022-06-27 06:01:27', 'nacos', '0:0:0:0:0:0:0:1', '', '', '系统模块', 'null', 'null', 'yaml', 'null', ''),
	(6, 'yydj-gen-dev.yml', 'DEFAULT_GROUP', '# spring配置\r\nspring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: yydj\r\n    password: n7c6qcPRc7SeZXxM\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.hztx.gen.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 代码生成接口文档\r\n  license: Powered By yydj\r\n  licenseUrl: https://yydj.vip\r\n\r\n# 代码生成\r\ngen:\r\n  # 作者\r\n  author: yydj\r\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\r\n  packageName: com.hztx.system\r\n  # 自动去除表前缀，默认是false\r\n  autoRemovePre: false\r\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\r\n  tablePrefix: sys_\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-gen/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'', '8c79f64a4cca9b821a03dc8b27a2d8eb', '2020-11-20 00:00:00', '2021-01-26 10:36:45', 'nacos', '0:0:0:0:0:0:0:1', '', '', '代码生成', 'null', 'null', 'yaml', NULL, ''),
	(7, 'yydj-job-dev.yml', 'DEFAULT_GROUP', '# spring配置\r\nspring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: yydj\r\n    password: n7c6qcPRc7SeZXxM\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.hztx.job.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 定时任务接口文档\r\n  license: Powered By yydj\r\n  licenseUrl: https://yydj.vip\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-job/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'', '7eedfe56b131371711325a9af3ca3f1a', '2020-11-20 00:00:00', '2022-06-22 07:30:15', 'nacos', '0:0:0:0:0:0:0:1', '', '', '定时任务', 'null', 'null', 'yaml', 'null', ''),
	(8, 'yydj-file-dev.yml', 'DEFAULT_GROUP', '# 本地文件上传\r\nfile:\r\n    domain: http://127.0.0.1:9300\r\n    path: D:/yydj/uploadPath\r\n    prefix: /statics\r\n\r\n# FastDFS配置\r\nfdfs:\r\n  domain: http://8.129.231.12\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: 8.129.231.12:22122\r\n\r\n# Minio配置\r\nminio:\r\n  url: http://192.168.2.5:5200\r\n  accessKey: adminMinio\r\n  secretKey: adminMinio\r\n  bucketName: apt\r\n', '5382b93f3d8059d6068c0501fdd41195', '2020-11-20 00:00:00', '2020-12-21 21:01:59', 'nacos', '0:0:0:0:0:0:0:1', '', '', '文件服务', 'null', 'null', 'yaml', NULL, ''),
	(9, 'sentinel-yydj-gateway', 'DEFAULT_GROUP', '[\n  {\n    "resource": "yydj-auth",\n    "count": 500,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-system",\n    "count": 1000,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-gen",\n    "count": 200,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-job",\n    "count": 300,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-autha",\n    "count": 500,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-asystem",\n    "count": 1000,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-client",\n    "count": 1000,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-content",\n    "count": 1000,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-device",\n    "count": 1000,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  },\n  {\n    "resource": "yydj-log",\n    "count": 1000,\n    "grade": 1,\n    "limitApp": "default",\n    "strategy": 0,\n    "controlBehavior": 0\n  }\n]', '26bf2c67baac8db89f7232a87a896f90', '2020-11-20 00:00:00', '2022-06-24 08:41:17', 'nacos', '0:0:0:0:0:0:0:1', '', '', '限流策略', 'null', 'null', 'json', '', ''),
	(13, 'yydj-client-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.client\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\n  \n# IM即时通讯平台\nim:\n  appId: 1400723300\n  appSecret: a7664ad450c30bde7c0a52a6e1e2624db29c050693ec1016db241525a0d1fcbe\n  \n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-client/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', 'bd84aad9c90794f7086deb6dc6f78334', '2022-06-24 06:50:00', '2022-06-24 06:59:30', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(18, 'yydj-log-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.log\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\n\n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-log/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', 'd81156f1c2007d2cd3bcd2d4c8399c4b', '2022-06-24 07:58:59', '2022-06-24 08:02:16', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(19, 'yydj-device-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  type-enums-package: com.hztx.common.core.enums\n  configuration:\n    default-enum-type-handler: org.apache.ibatis.type.EnumOrdinalTypeHandler\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\nthird:\n  serverUrl: http://api.jiai.pro:8080/jiai\n  \n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-device/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', '81ffd485741fb6df8eef7ea6bd339ea4', '2022-06-24 07:59:51', '2022-06-24 08:03:05', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(20, 'yydj-content-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.content\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\nvideo:\n  signature:\n    secretId: AKIDUyLYaSEzc3TmyzpVBoNqEiDh6Q8lImBr\n    secretKey: iLrHcvETn2DNRQKi2KYJ4nXFvW7iGk81\n\n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-content/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', '7908927ffda211679d7bc8db74c56756', '2022-06-24 08:00:28', '2022-06-24 08:03:54', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(21, 'yydj-asystem-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  mail:\n   ## SMTP服务器\n    host: smtp.qq.com\n   ## 发送验证码邮箱\n    username: 724555787@qq.com\n   ## 授权码\n    password: phtonizvhqjcbdgd\n   ## 编码\n    default-encoding: utf-8\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\ntuisong:\n  jiguang:\n    appKey: abda1624e51fe072b9c81216\n    secret: d313e0793f212bf55a811412\n  getui:\n    appId: 5TxDZkoMcb7MJOjtU13fLA\n    appKey: CSKOdp7pl09FAiZp84ECZ\n    secret: pUj9d1cYeh6wBqhKM0A91A\n    domain: https://restapi.getui.com/v2/\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.asystem\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\n  \n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-asystem/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'\n        \nsms:\n  endpoint: dysmsapi.aliyuncs.com\n  accessKeyId: LTAI5tPxSF655ssJbYSP8wPg\n  accessKeySecret: 34tONZLx541C508p2TNpeUwaPIEeDK\n  signName: 羊羊当家官方客服中心\n  selfTemplateCode: SMS_252535257\n  urgentTemplateCode: SMS_252575254\n  ', '93407e7df9f8e673af443bb199a556f1', '2022-06-24 08:01:10', '2022-06-24 08:22:07', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(22, 'yydj-autha-dev.yml', 'DEFAULT_GROUP', 'spring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-autha/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n', '7b354e1eb62c2c746d44a796d9ec6931', '2020-11-20 00:00:00', '2021-02-28 21:06:58', 'nacos', '0:0:0:0:0:0:0:1', '', '', 'App认证中心', 'null', 'null', 'yaml', NULL, ''),
	(23, 'yydj-system-pro.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.hztx.system.domain,com.hztx.system.api.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\n\n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-system/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', 'c7e55ca5134a4dc6064588f4523aedad', '2020-11-20 00:00:00', '2022-06-27 06:01:27', 'nacos', '0:0:0:0:0:0:0:1', '', '', '系统模块', 'null', 'null', 'yaml', 'null', ''),
	(24, 'yydj-monitor-pro.yml', 'DEFAULT_GROUP', '# spring\r\nspring:\r\n  security:\r\n    user:\r\n      name: yydj\r\n      password: 123456\r\n  mail:\r\n    host: smtp.qq.com # 发件人使用的qq邮箱服务\r\n    username: 724555787@qq.com\r\n    # 授权码，不是密码，在qq邮箱设置‐账号里面有生成授权码\r\n    password: dceifojhwufgbcjg\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 羊羊当家服务状态监控\r\n      notify:\r\n        mail:\r\n          # 发件人\r\n          from: 724555787@qq.com\r\n          # 收件人，多个中间用,分隔\r\n          to: 1329800796@qq.com\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-visual-monitor/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n', 'd8997d0707a2fd5d9fc4e8409da38129', '2020-11-20 00:00:00', '2020-12-21 16:28:07', 'nacos', '0:0:0:0:0:0:0:1', '', '', '监控中心', 'null', 'null', 'yaml', NULL, ''),
	(25, 'yydj-log-pro.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.log\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\n\n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-log/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', 'd81156f1c2007d2cd3bcd2d4c8399c4b', '2022-06-24 07:58:59', '2022-06-24 08:02:16', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(26, 'yydj-job-pro.yml', 'DEFAULT_GROUP', '# spring配置\r\nspring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: yydj\r\n    password: n7c6qcPRc7SeZXxM\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.hztx.job.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 定时任务接口文档\r\n  license: Powered By yydj\r\n  licenseUrl: https://yydj.vip\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-job/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'', '7eedfe56b131371711325a9af3ca3f1a', '2020-11-20 00:00:00', '2022-06-22 07:30:15', 'nacos', '0:0:0:0:0:0:0:1', '', '', '定时任务', 'null', 'null', 'yaml', 'null', ''),
	(27, 'yydj-gen-pro.yml', 'DEFAULT_GROUP', '# spring配置\r\nspring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: yydj\r\n    password: n7c6qcPRc7SeZXxM\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.hztx.gen.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 代码生成接口文档\r\n  license: Powered By yydj\r\n  licenseUrl: https://yydj.vip\r\n\r\n# 代码生成\r\ngen:\r\n  # 作者\r\n  author: yydj\r\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\r\n  packageName: com.hztx.system\r\n  # 自动去除表前缀，默认是false\r\n  autoRemovePre: false\r\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\r\n  tablePrefix: sys_\r\n\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-gen/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'', '8c79f64a4cca9b821a03dc8b27a2d8eb', '2020-11-20 00:00:00', '2021-01-26 10:36:45', 'nacos', '0:0:0:0:0:0:0:1', '', '', '代码生成', 'null', 'null', 'yaml', NULL, ''),
	(28, 'yydj-gateway-pro.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: yydj-auth\n          uri: lb://yydj-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 安卓app接口认证中心\n        - id: yydj-autha\n          uri: lb://yydj-autha\n          predicates:\n            - Path=/autha/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateSmsCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: yydj-gen\n          uri: lb://yydj-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: yydj-job\n          uri: lb://yydj-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: yydj-system\n          uri: lb://yydj-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: yydj-file\n          uri: lb://yydj-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # app系统模块\n        - id: yydj-asystem\n          uri: lb://yydj-asystem\n          predicates:\n            - Path=/asystem/**\n          filters:\n            - StripPrefix=1\n        # 客户模块\n        - id: yydj-client\n          uri: lb://yydj-client\n          predicates:\n            - Path=/client/**\n          filters:\n            - StripPrefix=1\n        # 视频内容模块\n        - id: yydj-content\n          uri: lb://yydj-content\n          predicates:\n            - Path=/content/**\n          filters:\n            - StripPrefix=1\n        # 设备模块模块\n        - id: yydj-device\n          uri: lb://yydj-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # app日志模块\n        - id: yydj-log\n          uri: lb://yydj-log\n          predicates:\n            - Path=/log/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /autha/logout\n      - /autha/login\n      - /autha/register\n      - /*/v2/api-docs\n      - /csrf\n      - /device/noticeReback/location\n      - /device/noticeReback/warning\n      - /device/noticeReback/health\n      - /device/noticeReback/beatHeart\n      - /device/noticeReback/audio\n      - /device/noticeReback/ecg\n      - /device/noticeReback/bluetooth\n      - /device/noticeReback/confirm\n      - /device/noticeReback/revh\n      - /autha/oauth/render/*\n      - /autha/oauth/callback/*\n      - /autha/circle/listByClassId/**\n      - /autha/video/info\n      - /autha/video/class/list\n      - /autha/index/bgm\n      - /autha/client/info/**\n      - /autha/video/list/user/**\n      - /auth/news/newsGetByKeyWord/**\nsms:\n  endpoint: dysmsapi.aliyuncs.com\n  accessKeyId: LTAI5tPxSF655ssJbYSP8wPg\n  accessKeySecret: 34tONZLx541C508p2TNpeUwaPIEeDK\n  signName: 羊羊当家\n  templateCode: SMS_224356316\n\n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-gateway/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', 'b8cbe7c6cd24c6c21dddb799b7b57ff7', '2020-05-14 14:17:55', '2022-06-24 08:34:50', 'nacos', '0:0:0:0:0:0:0:1', '', '', '网关模块', 'null', 'null', 'yaml', '', ''),
	(29, 'yydj-file-pro.yml', 'DEFAULT_GROUP', '# 本地文件上传\r\nfile:\r\n    domain: http://127.0.0.1:9300\r\n    path: D:/yydj/uploadPath\r\n    prefix: /statics\r\n\r\n# FastDFS配置\r\nfdfs:\r\n  domain: http://8.129.231.12\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: 8.129.231.12:22122\r\n\r\n# Minio配置\r\nminio:\r\n  url: http://192.168.2.5:5200\r\n  accessKey: adminMinio\r\n  secretKey: adminMinio\r\n  bucketName: apt\r\n', '5382b93f3d8059d6068c0501fdd41195', '2020-11-20 00:00:00', '2020-12-21 21:01:59', 'nacos', '0:0:0:0:0:0:0:1', '', '', '文件服务', 'null', 'null', 'yaml', NULL, ''),
	(30, 'yydj-device-pro.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  type-enums-package: com.hztx.common.core.enums\n  configuration:\n    default-enum-type-handler: org.apache.ibatis.type.EnumOrdinalTypeHandler\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\nthird:\n  serverUrl: http://api.jiai.pro:8080/jiai\n  \n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-device/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', '81ffd485741fb6df8eef7ea6bd339ea4', '2022-06-24 07:59:51', '2022-06-24 08:03:05', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(31, 'yydj-content-pro.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.content\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\nvideo:\n  signature:\n    secretId: AKIDUyLYaSEzc3TmyzpVBoNqEiDh6Q8lImBr\n    secretKey: iLrHcvETn2DNRQKi2KYJ4nXFvW7iGk81\n\n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-content/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', '7908927ffda211679d7bc8db74c56756', '2022-06-24 08:00:28', '2022-06-24 08:03:54', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(32, 'yydj-client-pro.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.client\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\n  \n# IM即时通讯平台\nim:\n  appId: 1400723300\n  appSecret: a7664ad450c30bde7c0a52a6e1e2624db29c050693ec1016db241525a0d1fcbe\n  \n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-client/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', 'bd84aad9c90794f7086deb6dc6f78334', '2022-06-24 06:50:00', '2022-06-24 06:59:30', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(33, 'yydj-autha-pro.yml', 'DEFAULT_GROUP', 'spring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-autha/info.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n', '7b354e1eb62c2c746d44a796d9ec6931', '2020-11-20 00:00:00', '2021-02-28 21:06:58', 'nacos', '0:0:0:0:0:0:0:1', '', '', 'App认证中心', 'null', 'null', 'yaml', NULL, ''),
	(34, 'yydj-auth-pro.yml', 'DEFAULT_GROUP', 'spring:\r\n  redis:\r\n    host: redis7\r\n    port: 6379\r\n    password:\r\n# 暴露监控端点\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n    # 日志记录\r\n    logfile:\r\n      external-file: logs/yydj-auth/error.log\r\n  endpoints:\r\n    enabled-by-default: true\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'', 'b7354e1eb62c2d846d44a796d9ec6930', '2020-11-20 00:00:00', '2021-02-28 21:06:58', 'nacos', '0:0:0:0:0:0:0:1', '', '', '认证中心', 'null', 'null', 'yaml', NULL, ''),
	(35, 'yydj-asystem-pro.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  mail:\n   ## SMTP服务器\n    host: smtp.qq.com\n   ## 发送验证码邮箱\n    username: 724555787@qq.com\n   ## 授权码\n    password: phtonizvhqjcbdgd\n   ## 编码\n    default-encoding: utf-8\n  redis:\n    host: redis7\n    port: 6379\n    password:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://mysql8:3306/yy-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: yydj\n            password: n7c6qcPRc7SeZXxM\n          # 从库数据源\n          # slave:\n            # username:\n            # password:\n            # url:\n            # driver-class-name:\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\ntuisong:\n  jiguang:\n    appKey: abda1624e51fe072b9c81216\n    secret: d313e0793f212bf55a811412\n  getui:\n    appId: 5TxDZkoMcb7MJOjtU13fLA\n    appKey: CSKOdp7pl09FAiZp84ECZ\n    secret: pUj9d1cYeh6wBqhKM0A91A\n    domain: https://restapi.getui.com/v2/\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      yydj-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: nacos2:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: nacos2:8848\n      namespace:\n\n# mybatis-plus日志\nmybatis-plus:\n  # 搜索指定包别名\n  typeAliasesPackage: com.hztx.asystem\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/**/*.xml\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By yydj\n  licenseUrl: https://yydj.vip\n  \n# 暴露监控端点\nmanagement:\n  endpoint:\n    health:\n      show-details: ALWAYS\n    # 日志记录\n    logfile:\n      external-file: logs/yydj-asystem/info.log\n  endpoints:\n    enabled-by-default: true\n    web:\n      base-path: /actuator\n      exposure:\n        include: \'*\'', '93407e7df9f8e673af443bb199a556f1', '2022-06-24 08:01:10', '2022-06-24 08:22:07', 'nacos', '0:0:0:0:0:0:0:1', '', '', '客户模块', '', '', 'yaml', '', NULL),
	(36, 'application-pro.yml', 'DEFAULT_GROUP', 'spring:\r\n  autoconfigure:\r\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n\r\n# feign 配置\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n  okhttp:\r\n    enabled: true\r\n  httpclient:\r\n    enabled: false\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 12000000\r\n        readTimeout: 12000000\r\n  compression:\r\n    request:\r\n      enabled: true \r\n      # 配置压缩数据大小的下限\r\n      min-request-size: 5012000\r\n    response:\r\n      enabled: true', 'aaa73b809cfd4d0058893aa13da57806', '2020-05-20 12:00:00', '2022-04-24 10:26:34', 'nacos', '0:0:0:0:0:0:0:1', '', '', '通用配置', 'null', 'null', 'yaml', NULL, '');

-- 导出  表 yy-config.config_info_aggr 结构
CREATE TABLE IF NOT EXISTS `config_info_aggr` (
  `id` bigint(20) DEFAULT NULL,
  `data_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `group_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `datum_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` longtext COLLATE utf8mb4_unicode_ci,
  `gmt_modified` datetime DEFAULT NULL,
  `app_name` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.config_info_aggr 的数据：~0 rows (大约)

-- 导出  表 yy-config.config_info_beta 结构
CREATE TABLE IF NOT EXISTS `config_info_beta` (
  `id` bigint(20) DEFAULT NULL,
  `data_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `group_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `app_name` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` longtext COLLATE utf8mb4_unicode_ci,
  `beta_ips` varchar(1024) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `md5` varchar(32) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `gmt_create` datetime DEFAULT NULL,
  `gmt_modified` datetime DEFAULT NULL,
  `src_user` text COLLATE utf8mb4_unicode_ci,
  `src_ip` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `encrypted_data_key` text COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.config_info_beta 的数据：~0 rows (大约)

-- 导出  表 yy-config.config_info_tag 结构
CREATE TABLE IF NOT EXISTS `config_info_tag` (
  `id` bigint(20) DEFAULT NULL,
  `data_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `group_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tag_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `app_name` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` longtext COLLATE utf8mb4_unicode_ci,
  `md5` varchar(32) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `gmt_create` datetime DEFAULT NULL,
  `gmt_modified` datetime DEFAULT NULL,
  `src_user` text COLLATE utf8mb4_unicode_ci,
  `src_ip` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.config_info_tag 的数据：~0 rows (大约)

-- 导出  表 yy-config.config_tags_relation 结构
CREATE TABLE IF NOT EXISTS `config_tags_relation` (
  `id` bigint(20) DEFAULT NULL,
  `tag_name` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tag_type` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `data_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `group_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `nid` bigint(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.config_tags_relation 的数据：~0 rows (大约)

-- 导出  表 yy-config.group_capacity 结构
CREATE TABLE IF NOT EXISTS `group_capacity` (
  `id` bigint(20) DEFAULT NULL,
  `group_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `quota` int(11) DEFAULT NULL,
  `usage` int(11) DEFAULT NULL,
  `max_size` int(11) DEFAULT NULL,
  `max_aggr_count` int(11) DEFAULT NULL,
  `max_aggr_size` int(11) DEFAULT NULL,
  `max_history_count` int(11) DEFAULT NULL,
  `gmt_create` datetime DEFAULT NULL,
  `gmt_modified` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.group_capacity 的数据：~0 rows (大约)

-- 导出  表 yy-config.his_config_info 结构
CREATE TABLE IF NOT EXISTS `his_config_info` (
  `id` bigint(20) DEFAULT NULL,
  `nid` bigint(20) DEFAULT NULL,
  `data_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `group_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `app_name` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` longtext COLLATE utf8mb4_unicode_ci,
  `md5` varchar(32) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `gmt_create` datetime DEFAULT NULL,
  `gmt_modified` datetime DEFAULT NULL,
  `src_user` text COLLATE utf8mb4_unicode_ci,
  `src_ip` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `op_type` char(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `encrypted_data_key` text COLLATE utf8mb4_unicode_ci
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.his_config_info 的数据：~0 rows (大约)

-- 导出  表 yy-config.permissions 结构
CREATE TABLE IF NOT EXISTS `permissions` (
  `role` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `resource` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `action` varchar(8) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.permissions 的数据：~0 rows (大约)

-- 导出  表 yy-config.roles 结构
CREATE TABLE IF NOT EXISTS `roles` (
  `username` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `role` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.roles 的数据：~0 rows (大约)
INSERT INTO `roles` (`username`, `role`) VALUES
	('nacos', 'ROLE_ADMIN');

-- 导出  表 yy-config.tenant_capacity 结构
CREATE TABLE IF NOT EXISTS `tenant_capacity` (
  `id` bigint(20) DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `quota` int(11) DEFAULT NULL,
  `usage` int(11) DEFAULT NULL,
  `max_size` int(11) DEFAULT NULL,
  `max_aggr_count` int(11) DEFAULT NULL,
  `max_aggr_size` int(11) DEFAULT NULL,
  `max_history_count` int(11) DEFAULT NULL,
  `gmt_create` datetime DEFAULT NULL,
  `gmt_modified` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.tenant_capacity 的数据：~0 rows (大约)

-- 导出  表 yy-config.tenant_info 结构
CREATE TABLE IF NOT EXISTS `tenant_info` (
  `id` bigint(20) DEFAULT NULL,
  `kp` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_name` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `tenant_desc` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `create_source` varchar(32) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `gmt_create` bigint(20) DEFAULT NULL,
  `gmt_modified` bigint(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.tenant_info 的数据：~0 rows (大约)

-- 导出  表 yy-config.users 结构
CREATE TABLE IF NOT EXISTS `users` (
  `username` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `password` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `enabled` tinyint(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;

-- 正在导出表  yy-config.users 的数据：~0 rows (大约)
INSERT INTO `users` (`username`, `password`, `enabled`) VALUES
	('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
